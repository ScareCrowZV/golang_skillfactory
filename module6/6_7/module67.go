package main

import "fmt"

func main() {
	fmt.Print("Вывод без перехода на новую строку")
	fmt.Println("Вывод с переходом на новую строку")

	fmt.Printf("вывод с форматирование данных, например, для вывода числа: %d", 5)
	formattedString := fmt.Sprintf("получение форматированной строки без вывода: %d", 5)
	fmt.Println(formattedString)

}

// %t: для вывода значений типа boolean (true или false).
// %b: для вывода целых чисел в двоичной системе.
// %c: для вывода символов, представленных числовым кодом.
// %d: для вывода целых чисел в десятичной системе.
// %o: для вывода целых чисел в восьмеричной системе.
// %q: для вывода символов в кавычках.
// %x: для вывода целых чисел в шестнадцатеричной системе, буквенные символы числа имеют нижний регистр a-f.
// %X: для вывода целых чисел в шестнадцатеричной системе, буквенные символы числа имеют верхний регистр A-F.
// %U: для вывода символов в формате кодов Unicode, например, U+1234.
// %e: для вывода чисел с плавающей точкой в экспоненциальном представлении, например, -1.2345e+67.
// %E: для вывода чисел с плавающей точкой в экспоненциальном представлении, например, -1.2345E+67.
// %f: для вывода чисел с плавающей точкой, например, 123.456.
// %F: то же самое, что и %f.
// %s: для вывода строки.
// %p: для вывода значения указателя — адреса в шестнадцатеричном представлении.
// %v: значение в формате по умолчанию. Go сам определит, к какому типу принадлежит значение, и выведет его. Используется, в том числе для вывода ошибок.
// %+v: используется для вывода структур так же, как и %v, с той разницей, что ещё выводит для структур название полей.
